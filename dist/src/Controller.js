/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/Controller.js":
/*!***************************!*\
  !*** ./src/Controller.js ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _View_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./View.js */ \"./src/View.js\");\n/* harmony import */ var _functional_GameObject_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./functional/GameObject.js */ \"./src/functional/GameObject.js\");\n\r\n\r\n\r\nconst d = document\r\nconst w = window\r\n\r\n// References\r\nconst gameView = d.querySelector('#game-view')\r\n// CONSTANTS\r\nlet gameObjectCount = 500\r\n// Global Information\r\nlet gameViewWidth = gameView.offsetWidth\r\nlet gameViewHeight = gameView.offsetHeight\r\n// State\r\nlet gameObjectsArray = []\r\n\r\n// Creating Game Objects\r\nfor (let index = 0; index < gameObjectCount; index++) {\r\n    setTimeout(() => {\r\n        gameObjectsArray.push(new _functional_GameObject_js__WEBPACK_IMPORTED_MODULE_1__.GameObject(gameView, gameViewWidth, gameViewHeight))\r\n    }, `${index}0`)\r\n}\r\n// Lets listen if the window has changed the size, and if so lets update out Game Objects\r\nw.addEventListener('resize', () => {\r\n    gameObjectsArray.forEach(gameObject => gameObject.updateParentSize(gameView.offsetWidth, gameView.offsetHeight))\r\n})\r\n\r\n// very lazy implementation\r\n// I am not going to provide any commentary for this one, this is a temprory implementation and is not here to stay\r\nconst buttonToSmall = d.querySelector('#change-small')\r\nconst buttonToBig = d.querySelector('#change-big')\r\n\r\nbuttonToBig.addEventListener('click', (event) => {\r\n    let hasAmount = gameObjectsArray.length\r\n    const changeTo = event.target.innerText\r\n\r\n    if (changeTo != hasAmount) {\r\n        const difference = changeTo - hasAmount\r\n\r\n        for (let index = 0; index < difference; index++) {\r\n            setTimeout(() => {\r\n                gameObjectsArray.push(new _functional_GameObject_js__WEBPACK_IMPORTED_MODULE_1__.GameObject(gameView, gameViewWidth, gameViewHeight))\r\n            }, `${index}0`)\r\n        }\r\n    }\r\n})\r\n\r\nbuttonToSmall.addEventListener('click', (event) => {\r\n    let hasAmount = gameObjectsArray.length\r\n    const changeTo = event.target.innerText\r\n\r\n    if (changeTo != hasAmount) {\r\n        const difference = hasAmount - changeTo\r\n\r\n        for (let index = 0; index < difference; index++) {\r\n            console.log(index)\r\n            gameObjectsArray[index].destroy()\r\n        }\r\n        gameObjectsArray.length = 100\r\n    }\r\n})\n\n//# sourceURL=webpack://dom-renderer/./src/Controller.js?");

/***/ }),

/***/ "./src/View.js":
/*!*********************!*\
  !*** ./src/View.js ***!
  \*********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"devTool\": () => (/* binding */ devTool)\n/* harmony export */ });\nconst d = document\r\n\r\n// Lets fill up our Dev Console and have its State stored.\r\nconst devToolElement = d.querySelector('#dev-console')\r\ndevToolElement.classList.add('hidden')\r\n// Cursor position part of the Dev Console.\r\nconst devToolCursor = d.createElement('div')\r\ndevToolCursor.id = 'dev-console_cursor'\r\n//devToolCursor.className = 'hidden'\r\n// Both X and Y position is displayed with H4 tag that holds the wording and span tag for the value\r\nconst devToolCursorX = d.createElement('h4')\r\nconst devToolCursorY = d.createElement('h4')\r\ndevToolCursorX.innerHTML = `horisontal:<span>Initiated</span>`\r\ndevToolCursorY.innerHTML = `vertical:<span>Initiated</span>` // so as this one\r\n// And so we can reference span elements in the future\r\nconst devToolCursorValueX = devToolCursorX.querySelector('span')\r\nconst devToolCursorValueY = devToolCursorY.querySelector('span')\r\n// Adding position representative elements to the parent\r\ndevToolCursor.append(devToolCursorX, devToolCursorY)\r\n\r\n\r\n// Mouse click detection\r\nconst detToolClick = d.createElement('div')\r\ndetToolClick.id = 'dev-console_click'\r\n//\r\nconst detToolClickState = d.createElement('h4')\r\ndetToolClickState.innerHTML = `mouse state: <span>Idle</span>`\r\n//\r\nconst detToolClickStateValue = detToolClickState.querySelector('span')\r\n// Adding to Click detector\r\ndetToolClick.append(detToolClickState)\r\n\r\n\r\n// Click target detection\r\nconst detToolClickTarget = d.createElement('div')\r\ndetToolClickTarget.id = 'dev-console_target'\r\n//\r\nconst detToolClickTargetState = d.createElement('h4')\r\ndetToolClickTargetState.innerHTML = `click target: <span>Empty</span>`\r\n//\r\nconst detToolClickTargetValue = detToolClickTargetState.querySelector('span')\r\n// Adding to Click detector\r\ndetToolClick.append(detToolClickTargetState)\r\n\r\n\r\n// Toggle button\r\nconst devToolToggle = d.createElement('button')\r\ndevToolToggle.id = 'dev-console_toggle'\r\ndevToolToggle.innerText = 'Toggle Console'\r\ndevToolToggle.addEventListener('click', () => devToolElement.classList.toggle('hidden'))\r\n\r\n// Adding everything to the console. This should be the very last line of dev console logic\r\ndevToolElement.append(devToolToggle, devToolCursor)\r\n\r\n// Functions to update dev console values\r\n// Done in a Class style but with a simple object\r\nconst devTool = {\r\n    reset: () => {\r\n        detToolClickTargetValue.innerText = 'Empty'\r\n        detToolClickStateValue.innerText = 'Idle'\r\n    },\r\n    cursorPosition: (x, y) => {\r\n        // Only updating the inner text of span elements\r\n        devToolCursorValueX.innerText = x\r\n        devToolCursorValueY.innerText = y\r\n    },\r\n    cursorState: (state) => detToolClickStateValue.innerText = state,\r\n    targetName: (state) => detToolClickTargetValue.innerText = state ? state : null\r\n}\r\n\r\n// Adding cursor position logic here\r\nd.addEventListener('mousemove', (event) => {\r\n    // On each call of the listener we capturing the position of the cursor\r\n    const cursorX = event.clientX\r\n    const cursorY = event.clientY\r\n\r\n    devTool.cursorPosition(cursorX, cursorY)\r\n})\r\n\r\n// TODO\r\n// [ ] Making logic for mouse state\r\n\n\n//# sourceURL=webpack://dom-renderer/./src/View.js?");

/***/ }),

/***/ "./src/functional/GameObject.js":
/*!**************************************!*\
  !*** ./src/functional/GameObject.js ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"GameObject\": () => (/* binding */ GameObject)\n/* harmony export */ });\n/* harmony import */ var _logical_MersenneTwister_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../logical/MersenneTwister.js */ \"./src/logical/MersenneTwister.js\");\n\r\n\r\n// Local method to shorten randomiser. Returns a value in a passed range or out of 100 by default\r\nconst _random = (range) => Math.floor(Math.random() * (range || 100))\r\n\r\n/**\r\n * Creates Game Object DIV Element on the parentObject Element, places it at startPosition coordinates\r\n * and sets transform-translate animation to arrivePosition coordinates over duration time, if isInfinite\r\n * then after the animation is over randomely creates new Starting and Ariving coordinates and repeates\r\n * the animation.\r\n */\r\nclass GameObject {\r\n    constructor (parentObject, parentWidth, parentHeight) {\r\n        // State\r\n        this.parent = parentObject || document.querySelector('#game-view')\r\n        this.parentWidth = parentWidth\r\n        this.parentHeight = parentHeight\r\n        // Each new Game Object has its duration time randomized at the initialasation and stays the same\r\n        // We have one of 4 Game Object sprites to choose from, but it is going to be random\r\n        this.duration = this.getRandomDuration()\r\n        this.varient = _random(4)\r\n        this.size = Math.round(this.parentWidth * 0.008) * 10 // Always closest rounded number to 8% of Game View width\r\n        this.direction = null   // either 'top' or 'down'\r\n        this.facing = null      // either 'default' or 'reversed'\r\n        this.starting = null\r\n        this.arriving = null\r\n\r\n        // Lets create the Game Object\r\n        this.object = document.createElement('div')\r\n        this.object.className = 'object'\r\n        this.object.style.width = this.size + 'px'\r\n        this.object.style.height = this.size + 'px'\r\n        this.object.style.backgroundImage = null\r\n        this.setObject()\r\n        // Changing CSS Variable here to make duration random\r\n        this.object.style.setProperty('--duration', `${this.duration}`)\r\n        // We want to repeat the animation after it has passed the iteration\r\n        this.object.addEventListener('animationiteration', () => this.setObject())\r\n\r\n        this.parent.append(this.object)\r\n    }\r\n\r\n    getRandomDuration = () => {\r\n        const random = Math.floor(new _logical_MersenneTwister_js__WEBPACK_IMPORTED_MODULE_0__.MersenneTwister(_random(100)).random() * 10)\r\n        return ['11.3s', '11.7s', '12.6s', '13.4s', '14.2s', '15s', '16.8s', '17.6s', '18.4s', '19.2s'][random]\r\n    }\r\n\r\n    getStartingCoordinates = () => {\r\n        /**\r\n         * Lets return coordinates on one of of the Game View edges (top, right, bottom or left).\r\n         * We do it by randomizing x (horisontal) and y (vertical) coordinates and then making an\r\n         * array of all possible variations [ [x, 0], [1, y], [x, 1], [0, y] ], since coordinates\r\n         * can only be on the edge it means that one of the values (either x or y) have to be\r\n         * either 0 or 1. After that we randomely select one of four of the variations and that is\r\n         * our final coordinate.\r\n         * If exeption index passed (because for arrival coordinates we want to exclude the edge\r\n         * on which we have already created the Game Object) then we pop out that item from the array\r\n         * and picking random index out of three.\r\n         * Instead of 0 we want a negative value of the size of the Game Object, so when it is created\r\n         * on either top or right edge - it is created outside of it on the same amount of length as\r\n         * it's own size\r\n         */\r\n        const x = _random(this.parentWidth)\r\n        const y = _random(this.parentHeight)\r\n        const variations = [\r\n            [x, -this.size],            // top\r\n            [this.parentWidth, y],      // right\r\n            [x, this.parentHeight],     // bottom\r\n            [-this.size, y]             // left\r\n        ]\r\n\r\n        const varient = _random() % 4 // Randomely picking one of the variation of coordinates\r\n\r\n        return variations[varient]\r\n    }\r\n\r\n    getDiagonalCoordinates = (startedCoordinates, directionUp) => {\r\n        // For the ease of use and clearety of the code we want to hold those cool values in short names\r\n        const x = startedCoordinates[0]\r\n        const y = startedCoordinates[1]\r\n        const width = this.parentWidth\r\n        const height = this.parentHeight\r\n\r\n        // Following equasion is from trigiometry and is hard to explain, but  will try.\r\n        // Starting point can be only on one of the edges of the Game View, we find on which of them\r\n        // it is by checking one of the values being equal to either 0 or the length of the edge.\r\n        if (y === -this.size) {\r\n            // On each of the conditional we want to know if the direction of the arriving coordinate\r\n            // going one or other way, which we did by flipping a coin. And after that we want to know\r\n            // if we dealing with landscape or portrait resolution.\r\n            if (directionUp) return x + height <= width ? [x + height, height] : [width, width - x]\r\n            else return x > height ? [x - height, height] : [-this.size, x]\r\n        }\r\n        else if (y === height) {\r\n            if (directionUp) return x + height <= width ? [x + height, -this.size] : [width, x - (width - height)]\r\n            else return x > height ? [x - height, -this.size] : [-this.size, height - x]\r\n        }\r\n        else if (x === -this.size) {\r\n            if (directionUp) return y <= width ? [y, -this.size] : [width, y - width]\r\n            else return (height - y) <= width ? [height - y, height] : [width, width + y]\r\n        }\r\n        else if (x === width) {\r\n            if (directionUp) return y <= width ? [width - y, -this.size] : [-this.size, y - width]\r\n            else return height - y <= width ? [width - (height - y), height] : [-this.size, width + y]\r\n        }\r\n        // Math is fun\r\n    }\r\n\r\n    setObject = () => {\r\n        //this.objectDirection = varient === 0 ? 'down' : 'up'\r\n\r\n        // Direction is either one ot the other way, so lets have a boolean for the simplicity\r\n        this.direction = _random(2) === 0\r\n        this.starting = this.getStartingCoordinates()\r\n        this.arriving = this.getDiagonalCoordinates(this.starting, this.direction)\r\n\r\n        // We can figure out the direction of where the Game Object is arriving by doing a simple equation.\r\n        // For example if arriving Y cooridinate is bigger than starting - that means the Game Object is moving down.\r\n        this.vertical = this.starting[1] > this.arriving[1] ? 'up' : 'down'\r\n        this.horisontal = this.starting[0] > this.arriving[0] ? -1 : 1\r\n        // We can pass those properties in to the styles and have a variations of our Game Objects.\r\n        this.object.style.backgroundImage = `url('static/img/car[${this.varient}]direction[${this.vertical}].png')`\r\n        this.object.style.setProperty('--flip', `scaleX(${this.horisontal})`)\r\n\r\n        this.object.style.setProperty('--starting', `translate(${this.starting[0]}px, ${this.starting[1]}px)`)\r\n        this.object.style.setProperty('--arriving', `translate(${this.arriving[0]}px, ${this.arriving[1]}px)`)\r\n    }\r\n\r\n    updateParentSize = (width, height) => {\r\n        this.parentWidth = width\r\n        this.parentHeight = height\r\n    }\r\n\r\n    destroy = () => {\r\n        console.log('destroying')\r\n        this.object.remove()\r\n    }\r\n}\n\n//# sourceURL=webpack://dom-renderer/./src/functional/GameObject.js?");

/***/ }),

/***/ "./src/logical/MersenneTwister.js":
/*!****************************************!*\
  !*** ./src/logical/MersenneTwister.js ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"MersenneTwister\": () => (/* binding */ MersenneTwister)\n/* harmony export */ });\n\r\n/*\r\n  I've wrapped Makoto Matsumoto and Takuji Nishimura's code in a namespace\r\n  so it's better encapsulated. Now you can have multiple random number generators\r\n  and they won't stomp all over eachother's state.\r\n  \r\n  If you want to use this as a substitute for Math.random(), use the random()\r\n  method like so:\r\n  \r\n  var m = new MersenneTwister();\r\n  var randomNumber = m.random();\r\n  \r\n  You can also call the other genrand_{foo}() methods on the instance.\r\n  If you want to use a specific seed in order to get a repeatable random\r\n  sequence, pass an integer into the constructor:\r\n  var m = new MersenneTwister(123);\r\n  and that will always produce the same random sequence.\r\n  Sean McCullough (banksean@gmail.com)\r\n*/\r\n\r\n/* \r\n   A C-program for MT19937, with initialization improved 2002/1/26.\r\n   Coded by Takuji Nishimura and Makoto Matsumoto.\r\n \r\n   Before using, initialize the state by using init_genrand(seed)  \r\n   or init_by_array(init_key, key_length).\r\n \r\n   Copyright (C) 1997 - 2002, Makoto Matsumoto and Takuji Nishimura,\r\n   All rights reserved.                          \r\n \r\n   Redistribution and use in source and binary forms, with or without\r\n   modification, are permitted provided that the following conditions\r\n   are met:\r\n \r\n     1. Redistributions of source code must retain the above copyright\r\n        notice, this list of conditions and the following disclaimer.\r\n \r\n     2. Redistributions in binary form must reproduce the above copyright\r\n        notice, this list of conditions and the following disclaimer in the\r\n        documentation and/or other materials provided with the distribution.\r\n \r\n     3. The names of its contributors may not be used to endorse or promote \r\n        products derived from this software without specific prior written \r\n        permission.\r\n \r\n   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\r\n   \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\r\n   LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\r\n   A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR\r\n   CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\r\n   EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\r\n   PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n   PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\r\n   LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\r\n   NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\r\n   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n \r\n \r\n   Any feedback is very welcome.\r\n   http://www.math.sci.hiroshima-u.ac.jp/~m-mat/MT/emt.html\r\n   email: m-mat @ math.sci.hiroshima-u.ac.jp (remove space)\r\n*/\r\n\r\nvar MersenneTwister = function (seed) {\r\n    if (seed == undefined) {\r\n        seed = new Date().getTime();\r\n    }\r\n    /* Period parameters */\r\n    this.N = 624;\r\n    this.M = 397;\r\n    this.MATRIX_A = 0x9908b0df;   /* constant vector a */\r\n    this.UPPER_MASK = 0x80000000; /* most significant w-r bits */\r\n    this.LOWER_MASK = 0x7fffffff; /* least significant r bits */\r\n\r\n    this.mt = new Array(this.N); /* the array for the state vector */\r\n    this.mti = this.N + 1; /* mti==N+1 means mt[N] is not initialized */\r\n\r\n    this.init_genrand(seed);\r\n}\r\n\r\n/* initializes mt[N] with a seed */\r\nMersenneTwister.prototype.init_genrand = function (s) {\r\n    this.mt[0] = s >>> 0;\r\n    for (this.mti = 1; this.mti < this.N; this.mti++) {\r\n        var s = this.mt[this.mti - 1] ^ (this.mt[this.mti - 1] >>> 30);\r\n        this.mt[this.mti] = (((((s & 0xffff0000) >>> 16) * 1812433253) << 16) + (s & 0x0000ffff) * 1812433253)\r\n            + this.mti;\r\n        /* See Knuth TAOCP Vol2. 3rd Ed. P.106 for multiplier. */\r\n        /* In the previous versions, MSBs of the seed affect   */\r\n        /* only MSBs of the array mt[].                        */\r\n        /* 2002/01/09 modified by Makoto Matsumoto             */\r\n        this.mt[this.mti] >>>= 0;\r\n        /* for >32 bit machines */\r\n    }\r\n}\r\n\r\n/* initialize by an array with array-length */\r\n/* init_key is the array for initializing keys */\r\n/* key_length is its length */\r\n/* slight change for C++, 2004/2/26 */\r\nMersenneTwister.prototype.init_by_array = function (init_key, key_length) {\r\n    var i, j, k;\r\n    this.init_genrand(19650218);\r\n    i = 1; j = 0;\r\n    k = (this.N > key_length ? this.N : key_length);\r\n    for (; k; k--) {\r\n        var s = this.mt[i - 1] ^ (this.mt[i - 1] >>> 30)\r\n        this.mt[i] = (this.mt[i] ^ (((((s & 0xffff0000) >>> 16) * 1664525) << 16) + ((s & 0x0000ffff) * 1664525)))\r\n            + init_key[j] + j; /* non linear */\r\n        this.mt[i] >>>= 0; /* for WORDSIZE > 32 machines */\r\n        i++; j++;\r\n        if (i >= this.N) { this.mt[0] = this.mt[this.N - 1]; i = 1; }\r\n        if (j >= key_length) j = 0;\r\n    }\r\n    for (k = this.N - 1; k; k--) {\r\n        var s = this.mt[i - 1] ^ (this.mt[i - 1] >>> 30);\r\n        this.mt[i] = (this.mt[i] ^ (((((s & 0xffff0000) >>> 16) * 1566083941) << 16) + (s & 0x0000ffff) * 1566083941))\r\n            - i; /* non linear */\r\n        this.mt[i] >>>= 0; /* for WORDSIZE > 32 machines */\r\n        i++;\r\n        if (i >= this.N) { this.mt[0] = this.mt[this.N - 1]; i = 1; }\r\n    }\r\n\r\n    this.mt[0] = 0x80000000; /* MSB is 1; assuring non-zero initial array */\r\n}\r\n\r\n/* generates a random number on [0,0xffffffff]-interval */\r\nMersenneTwister.prototype.genrand_int32 = function () {\r\n    var y;\r\n    var mag01 = new Array(0x0, this.MATRIX_A);\r\n    /* mag01[x] = x * MATRIX_A  for x=0,1 */\r\n\r\n    if (this.mti >= this.N) { /* generate N words at one time */\r\n        var kk;\r\n\r\n        if (this.mti == this.N + 1)   /* if init_genrand() has not been called, */\r\n            this.init_genrand(5489); /* a default initial seed is used */\r\n\r\n        for (kk = 0; kk < this.N - this.M; kk++) {\r\n            y = (this.mt[kk] & this.UPPER_MASK) | (this.mt[kk + 1] & this.LOWER_MASK);\r\n            this.mt[kk] = this.mt[kk + this.M] ^ (y >>> 1) ^ mag01[y & 0x1];\r\n        }\r\n        for (; kk < this.N - 1; kk++) {\r\n            y = (this.mt[kk] & this.UPPER_MASK) | (this.mt[kk + 1] & this.LOWER_MASK);\r\n            this.mt[kk] = this.mt[kk + (this.M - this.N)] ^ (y >>> 1) ^ mag01[y & 0x1];\r\n        }\r\n        y = (this.mt[this.N - 1] & this.UPPER_MASK) | (this.mt[0] & this.LOWER_MASK);\r\n        this.mt[this.N - 1] = this.mt[this.M - 1] ^ (y >>> 1) ^ mag01[y & 0x1];\r\n\r\n        this.mti = 0;\r\n    }\r\n\r\n    y = this.mt[this.mti++];\r\n\r\n    /* Tempering */\r\n    y ^= (y >>> 11);\r\n    y ^= (y << 7) & 0x9d2c5680;\r\n    y ^= (y << 15) & 0xefc60000;\r\n    y ^= (y >>> 18);\r\n\r\n    return y >>> 0;\r\n}\r\n\r\n/* generates a random number on [0,0x7fffffff]-interval */\r\nMersenneTwister.prototype.genrand_int31 = function () {\r\n    return (this.genrand_int32() >>> 1);\r\n}\r\n\r\n/* generates a random number on [0,1]-real-interval */\r\nMersenneTwister.prototype.genrand_real1 = function () {\r\n    return this.genrand_int32() * (1.0 / 4294967295.0);\r\n    /* divided by 2^32-1 */\r\n}\r\n\r\n/* generates a random number on [0,1)-real-interval */\r\nMersenneTwister.prototype.random = function () {\r\n    return this.genrand_int32() * (1.0 / 4294967296.0);\r\n    /* divided by 2^32 */\r\n}\r\n\r\n/* generates a random number on (0,1)-real-interval */\r\nMersenneTwister.prototype.genrand_real3 = function () {\r\n    return (this.genrand_int32() + 0.5) * (1.0 / 4294967296.0);\r\n    /* divided by 2^32 */\r\n}\r\n\r\n/* generates a random number on [0,1) with 53-bit resolution*/\r\nMersenneTwister.prototype.genrand_res53 = function () {\r\n    var a = this.genrand_int32() >>> 5, b = this.genrand_int32() >>> 6;\r\n    return (a * 67108864.0 + b) * (1.0 / 9007199254740992.0);\r\n}\r\n\r\n/* These real versions are due to Isaku Wada, 2002/01/09 added */\n\n//# sourceURL=webpack://dom-renderer/./src/logical/MersenneTwister.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/Controller.js");
/******/ 	
/******/ })()
;